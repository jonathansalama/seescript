import valoo from "valoo";
export interface Emitter<T> {
    (value: T): void;
    on: (fn: (value: T) => void) => valoo.Disposer;
}
export declare type Disposer = valoo.Disposer;
export declare enum EventType {
    Initial = 0,
    Input = 1,
    External = 2
}
export interface Event {
    t: EventType;
    v: string;
}
export default function behaviorStore<T>(initialValue: T): Emitter<T>;
