import Fuse, { FuseOptions } from "fuse.js";
import React from "react";
import { Emitter, Event } from "./behaviorStore";
export declare type PreFilterHandler<T> = (match: string, items: T[], fuse: typeof Fuse) => T[];
export interface PreFilter<T> {
    regex: RegExp;
    handler: PreFilterHandler<T>;
}
export interface FilterResultsProps<T> {
    children: (items: T[]) => React.ReactNode;
    items: T[];
    defaultAllItems?: boolean;
    fuseConfig: FuseOptions<T>;
    prefilters?: Array<PreFilter<T>>;
}
export declare type FilterResults<T> = React.FunctionComponent<FilterResultsProps<T>>;
export default function filterResultsFactory<T>(store: Emitter<Event>): FilterResults<T>;
