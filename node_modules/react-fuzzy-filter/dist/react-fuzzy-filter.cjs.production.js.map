{"version":3,"file":"react-fuzzy-filter.cjs.production.js","sources":["../src/behaviorStore.ts","../src/FilterResults.tsx","../src/InputFilter.tsx","../src/index.ts"],"sourcesContent":["import valoo from \"valoo\";\n\nexport interface Emitter<T> {\n  (value: T): void;\n  on: (fn: (value: T) => void) => valoo.Disposer;\n}\n\nexport type Disposer = valoo.Disposer;\n\nexport enum EventType {\n  Initial = 0,\n  Input,\n  External,\n}\n\nexport interface Event {\n  t: EventType; // type\n  v: string; // value\n}\n\n// emulates BehaviorSubject from rxjs\n// (stores current state) and replays it on subscribe\nexport default function behaviorStore<T>(initialValue: T): Emitter<T> {\n  const store: valoo.Observable<T> = valoo(initialValue);\n  let currentState = initialValue;\n  // save currentState before emitting\n  const emit = function(value: T) {\n    currentState = value;\n    store(value);\n  } as Emitter<T>;\n\n  // emit currentState on subscribe\n  // then use default valoo behavior\n  emit.on = function(fn: (value: T) => void): valoo.Disposer {\n    fn(currentState);\n    return store.on(fn);\n  };\n  return emit;\n}\n","import Fuse, { FuseOptions } from \"fuse.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Emitter, Event } from \"./behaviorStore\";\n\nexport type PreFilterHandler<T> = (\n  match: string,\n  items: T[],\n  fuse: typeof Fuse\n) => T[];\n\nexport interface PreFilter<T> {\n  regex: RegExp;\n  handler: PreFilterHandler<T>;\n}\nexport interface FilterResultsProps<T> {\n  children: (items: T[]) => React.ReactNode;\n  items: T[];\n  defaultAllItems?: boolean;\n  fuseConfig: FuseOptions<T>;\n  prefilters?: Array<PreFilter<T>>;\n}\n\nexport type FilterResults<T> = React.FunctionComponent<FilterResultsProps<T>>;\n\nexport default function filterResultsFactory<T>(\n  store: Emitter<Event>\n): FilterResults<T> {\n  const Results: FilterResults<T> = (props: FilterResultsProps<T>) => {\n    const [searchVal, setSearch] = useState(\"\");\n\n    useEffect(() => {\n      const unsubscribe = store.on(({ v }) => {\n        setSearch(v);\n      });\n      return unsubscribe;\n    }, []);\n\n    const prefilterItems = (s: string): { items: T[]; search: string } => {\n      let items = props.items;\n      (props.prefilters || []).forEach(({ regex, handler }) => {\n        const matches = s.match(regex) || [];\n        s = s.replace(regex, \"\").trim();\n        matches.forEach(match => {\n          items = handler(match, items, Fuse);\n        });\n      });\n      return { items, search: s };\n    };\n\n    const filterItems = (s: string): T[] => {\n      const { items, search } = prefilterItems(s || \"\");\n      if (search.trim() === \"\") {\n        return props.defaultAllItems ? items : [];\n      } else {\n        const fuse = new Fuse(items, props.fuseConfig);\n        return fuse.search(search);\n      }\n    };\n\n    const filteredItems = filterItems(searchVal);\n    // wrap with Fragment to fix type issue\n    return <Fragment>{props.children(filteredItems)}</Fragment>;\n  };\n  Results.displayName = \"FilterResults\";\n  Results.defaultProps = {\n    defaultAllItems: true,\n    prefilters: [],\n  };\n\n  return Results;\n}\n","import debounce from \"debounce\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Emitter, Event, EventType } from \"./behaviorStore\";\n\nexport interface InputFilterProps {\n  classPrefix?: string;\n  initialSearch?: string;\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n  onChange?: (value: string) => string;\n  debounceTime?: number;\n}\n\nexport type InputFilter = React.ComponentType<InputFilterProps>;\nconst defaultProps = {\n  classPrefix: \"react-fuzzy-filter\",\n  debounceTime: 0,\n  inputProps: {},\n  onChange: (value: string) => value,\n};\n\nexport default function inputFilterFactory(store: Emitter<Event>): InputFilter {\n  function updateValue(value: string, onChange: (value: string) => string) {\n    const overrideValue = onChange(value);\n    store({ t: EventType.Input, v: overrideValue });\n  }\n\n  const Input: React.FunctionComponent<InputFilterProps> = (\n    props: InputFilterProps\n  ) => {\n    const initialSearch = props.initialSearch || \"\";\n    const onChange = props.onChange || defaultProps.onChange;\n    const debounceTime = props.debounceTime || defaultProps.debounceTime;\n\n    const [inputValue, setValue] = useState(initialSearch);\n    const debouncedUpdate = useCallback(debounce(updateValue, debounceTime), [\n      debounceTime,\n    ]);\n\n    useEffect(() => {\n      const unsubscribe = store.on(({ v, t }) => {\n        if (t === EventType.External) {\n          setValue(v);\n        }\n      });\n      return unsubscribe;\n    }, []);\n\n    useEffect(() => {\n      updateValue(initialSearch, onChange);\n    }, [initialSearch, onChange]);\n\n    const handleChange = ({\n      target: { value },\n    }: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(value);\n      if (debounceTime) {\n        debouncedUpdate(value, onChange);\n      } else {\n        updateValue(value, onChange);\n      }\n    };\n\n    return (\n      <input\n        className={`${props.classPrefix}__input`}\n        onChange={handleChange}\n        value={inputValue}\n        {...props.inputProps}\n      />\n    );\n  };\n\n  Input.displayName = \"InputFilter\";\n  Input.defaultProps = defaultProps;\n\n  return Input;\n}\n","import behaviorStore, { Emitter, Event, EventType } from \"./behaviorStore\";\nimport filterResultsFactory from \"./FilterResults\";\nimport inputFilterFactory from \"./InputFilter\";\n\nexport {\n  FilterResults,\n  FilterResultsProps,\n  PreFilter,\n  PreFilterHandler,\n} from \"./FilterResults\";\nexport { FuseOptions, FuseResult } from \"fuse.js\";\nexport { InputFilter, InputFilterProps } from \"./InputFilter\";\n\nexport default function fuzzyFilterFactory<T>() {\n  const store: Emitter<Event> = behaviorStore<Event>({\n    t: EventType.Initial,\n    v: \"\",\n  });\n  return {\n    FilterResults: filterResultsFactory<T>(store),\n    InputFilter: inputFilterFactory(store),\n    changeInputValue: (value: string) => {\n      store({\n        t: EventType.External,\n        v: typeof value !== \"string\" ? \"\" : value,\n      });\n    },\n  };\n}\n"],"names":["EventType","filterResultsFactory","store","Results","props","_a","searchVal","setSearch","useEffect","on","filteredItems","s","items","prefilters","forEach","regex","handler","matches","match","replace","trim","Fuse","search","defaultAllItems","fuseConfig","filterItems","React","Fragment","children","displayName","defaultProps","classPrefix","debounceTime","inputProps","onChange","value","inputFilterFactory","updateValue","overrideValue","t","Input","v","initialSearch","inputValue","setValue","debouncedUpdate","useCallback","debounce","External","className","initialValue","valoo","currentState","emit","fn","behaviorStore","Initial","FilterResults","InputFilter","changeInputValue"],"mappings":"uFASYA,+HCeYC,EACtBC,GAEA,IAAMC,EAA4B,SAACC,GAC3B,IAAAC,iBAACC,OAAWC,OAElBC,YAAU,WAIR,OAHoBN,EAAMO,GAAG,SAACJ,GAC5BE,UAGD,IAEH,IAsBMG,EAVc,SAACC,GACb,IAAAN,EAbe,SAACM,GACtB,IAAIC,EAAQR,EAAMQ,MAQlB,OAPCR,EAAMS,YAAc,IAAIC,QAAQ,SAACT,OAAEU,UAAOC,YACnCC,EAAUN,EAAEO,MAAMH,IAAU,GAClCJ,EAAIA,EAAEQ,QAAQJ,EAAO,IAAIK,OACzBH,EAAQH,QAAQ,SAAAI,GACdN,EAAQI,EAAQE,EAAON,EAAOS,OAG3B,CAAET,QAAOU,OAAQX,WAIhBC,UAAOU,WACf,MAAsB,KAAlBA,EAAOF,OACFhB,EAAMmB,gBAAkBX,EAAQ,GAE1B,IAAIS,EAAKT,EAAOR,EAAMoB,YACvBF,OAAOA,GAIDG,CAAYnB,GAElC,OAAOoB,gBAACC,gBAAUvB,EAAMwB,SAASlB,KAQnC,OANAP,EAAQ0B,YAAc,gBACtB1B,EAAQ2B,aAAe,CACrBP,iBAAiB,EACjBV,WAAY,IAGPV,GD5DT,SAAYH,GACVA,yBACAA,qBACAA,2BAHF,CAAYA,IAAAA,OEIZ,IAAM8B,EAAe,CACnBC,YAAa,qBACbC,aAAc,EACdC,WAAY,GACZC,SAAU,SAACC,GAAkB,OAAAA,aAGPC,EAAmBlC,GACzC,SAASmC,EAAYF,EAAeD,GAClC,IAAMI,EAAgBJ,EAASC,GAC/BjC,EAAM,CAAEqC,EAAGvC,EAAUwC,MAAOC,EAAGH,IAGjC,IAAME,EAAmD,SACvDpC,GAEA,IAAMsC,EAAgBtC,EAAMsC,eAAiB,GACvCR,EAAW9B,EAAM8B,UAAYJ,EAAaI,SAC1CF,EAAe5B,EAAM4B,cAAgBF,EAAaE,aAElD3B,gBAACsC,OAAYC,OACbC,EAAkBC,cAAYC,EAASV,EAAaL,GAAe,CACvEA,IAGFxB,YAAU,WAMR,OALoBN,EAAMO,GAAG,SAACJ,SAClBL,EAAUgD,UAClBJ,UAIH,IAEHpC,YAAU,WACR6B,EAAYK,EAAeR,IAC1B,CAACQ,EAAeR,IAanB,OACER,oCACEuB,UAAc7C,EAAM2B,sBACpBG,SAdiB,SAAC7B,OACV8B,iBAEVS,EAAST,GACLH,EACFa,EAAgBV,EAAOD,GAEvBG,EAAYF,EAAOD,IAQnBC,MAAOQ,GACHvC,EAAM6B,cAQhB,OAHAO,EAAMX,YAAc,cACpBW,EAAMV,aAAeA,EAEdU,4BC7DP,IAAMtC,WHQiCgD,GACvC,IAAMhD,EAA6BiD,EAAMD,GACrCE,EAAeF,EAEbG,EAAO,SAASlB,GACpBiB,EAAejB,EACfjC,EAAMiC,IASR,OAJAkB,EAAK5C,GAAK,SAAS6C,GAEjB,OADAA,EAAGF,GACIlD,EAAMO,GAAG6C,IAEXD,EGvBuBE,CAAqB,CACjDhB,EAAGvC,EAAUwD,QACbf,EAAG,KAEL,MAAO,CACLgB,cAAexD,EAAwBC,GACvCwD,YAAatB,EAAmBlC,GAChCyD,iBAAkB,SAACxB,GACjBjC,EAAM,CACJqC,EAAGvC,EAAUgD,SACbP,EAAoB,iBAAVN,EAAqB,GAAKA"}