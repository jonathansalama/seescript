{"version":3,"file":"react-fuzzy-filter.cjs.development.js","sources":["../src/behaviorStore.ts","../src/FilterResults.tsx","../src/InputFilter.tsx","../src/index.ts"],"sourcesContent":["import valoo from \"valoo\";\n\nexport interface Emitter<T> {\n  (value: T): void;\n  on: (fn: (value: T) => void) => valoo.Disposer;\n}\n\nexport type Disposer = valoo.Disposer;\n\nexport enum EventType {\n  Initial = 0,\n  Input,\n  External,\n}\n\nexport interface Event {\n  t: EventType; // type\n  v: string; // value\n}\n\n// emulates BehaviorSubject from rxjs\n// (stores current state) and replays it on subscribe\nexport default function behaviorStore<T>(initialValue: T): Emitter<T> {\n  const store: valoo.Observable<T> = valoo(initialValue);\n  let currentState = initialValue;\n  // save currentState before emitting\n  const emit = function(value: T) {\n    currentState = value;\n    store(value);\n  } as Emitter<T>;\n\n  // emit currentState on subscribe\n  // then use default valoo behavior\n  emit.on = function(fn: (value: T) => void): valoo.Disposer {\n    fn(currentState);\n    return store.on(fn);\n  };\n  return emit;\n}\n","import Fuse, { FuseOptions } from \"fuse.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Emitter, Event } from \"./behaviorStore\";\n\nexport type PreFilterHandler<T> = (\n  match: string,\n  items: T[],\n  fuse: typeof Fuse\n) => T[];\n\nexport interface PreFilter<T> {\n  regex: RegExp;\n  handler: PreFilterHandler<T>;\n}\nexport interface FilterResultsProps<T> {\n  children: (items: T[]) => React.ReactNode;\n  items: T[];\n  defaultAllItems?: boolean;\n  fuseConfig: FuseOptions<T>;\n  prefilters?: Array<PreFilter<T>>;\n}\n\nexport type FilterResults<T> = React.FunctionComponent<FilterResultsProps<T>>;\n\nexport default function filterResultsFactory<T>(\n  store: Emitter<Event>\n): FilterResults<T> {\n  const Results: FilterResults<T> = (props: FilterResultsProps<T>) => {\n    const [searchVal, setSearch] = useState(\"\");\n\n    useEffect(() => {\n      const unsubscribe = store.on(({ v }) => {\n        setSearch(v);\n      });\n      return unsubscribe;\n    }, []);\n\n    const prefilterItems = (s: string): { items: T[]; search: string } => {\n      let items = props.items;\n      (props.prefilters || []).forEach(({ regex, handler }) => {\n        const matches = s.match(regex) || [];\n        s = s.replace(regex, \"\").trim();\n        matches.forEach(match => {\n          items = handler(match, items, Fuse);\n        });\n      });\n      return { items, search: s };\n    };\n\n    const filterItems = (s: string): T[] => {\n      const { items, search } = prefilterItems(s || \"\");\n      if (search.trim() === \"\") {\n        return props.defaultAllItems ? items : [];\n      } else {\n        const fuse = new Fuse(items, props.fuseConfig);\n        return fuse.search(search);\n      }\n    };\n\n    const filteredItems = filterItems(searchVal);\n    // wrap with Fragment to fix type issue\n    return <Fragment>{props.children(filteredItems)}</Fragment>;\n  };\n  Results.displayName = \"FilterResults\";\n  Results.defaultProps = {\n    defaultAllItems: true,\n    prefilters: [],\n  };\n\n  return Results;\n}\n","import debounce from \"debounce\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Emitter, Event, EventType } from \"./behaviorStore\";\n\nexport interface InputFilterProps {\n  classPrefix?: string;\n  initialSearch?: string;\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>;\n  onChange?: (value: string) => string;\n  debounceTime?: number;\n}\n\nexport type InputFilter = React.ComponentType<InputFilterProps>;\nconst defaultProps = {\n  classPrefix: \"react-fuzzy-filter\",\n  debounceTime: 0,\n  inputProps: {},\n  onChange: (value: string) => value,\n};\n\nexport default function inputFilterFactory(store: Emitter<Event>): InputFilter {\n  function updateValue(value: string, onChange: (value: string) => string) {\n    const overrideValue = onChange(value);\n    store({ t: EventType.Input, v: overrideValue });\n  }\n\n  const Input: React.FunctionComponent<InputFilterProps> = (\n    props: InputFilterProps\n  ) => {\n    const initialSearch = props.initialSearch || \"\";\n    const onChange = props.onChange || defaultProps.onChange;\n    const debounceTime = props.debounceTime || defaultProps.debounceTime;\n\n    const [inputValue, setValue] = useState(initialSearch);\n    const debouncedUpdate = useCallback(debounce(updateValue, debounceTime), [\n      debounceTime,\n    ]);\n\n    useEffect(() => {\n      const unsubscribe = store.on(({ v, t }) => {\n        if (t === EventType.External) {\n          setValue(v);\n        }\n      });\n      return unsubscribe;\n    }, []);\n\n    useEffect(() => {\n      updateValue(initialSearch, onChange);\n    }, [initialSearch, onChange]);\n\n    const handleChange = ({\n      target: { value },\n    }: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(value);\n      if (debounceTime) {\n        debouncedUpdate(value, onChange);\n      } else {\n        updateValue(value, onChange);\n      }\n    };\n\n    return (\n      <input\n        className={`${props.classPrefix}__input`}\n        onChange={handleChange}\n        value={inputValue}\n        {...props.inputProps}\n      />\n    );\n  };\n\n  Input.displayName = \"InputFilter\";\n  Input.defaultProps = defaultProps;\n\n  return Input;\n}\n","import behaviorStore, { Emitter, Event, EventType } from \"./behaviorStore\";\nimport filterResultsFactory from \"./FilterResults\";\nimport inputFilterFactory from \"./InputFilter\";\n\nexport {\n  FilterResults,\n  FilterResultsProps,\n  PreFilter,\n  PreFilterHandler,\n} from \"./FilterResults\";\nexport { FuseOptions, FuseResult } from \"fuse.js\";\nexport { InputFilter, InputFilterProps } from \"./InputFilter\";\n\nexport default function fuzzyFilterFactory<T>() {\n  const store: Emitter<Event> = behaviorStore<Event>({\n    t: EventType.Initial,\n    v: \"\",\n  });\n  return {\n    FilterResults: filterResultsFactory<T>(store),\n    InputFilter: inputFilterFactory(store),\n    changeInputValue: (value: string) => {\n      store({\n        t: EventType.External,\n        v: typeof value !== \"string\" ? \"\" : value,\n      });\n    },\n  };\n}\n"],"names":["useEffect","React","Fragment","useCallback"],"mappings":"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"}